version: '3.8'

services:
  quantum-yield-empire:
    build: .
    container_name: quantum-yield-empire
    ports:
      - "3003:3003"  # Professional Website
      - "3006:3006"  # Testnet Dashboard
    environment:
      - NODE_ENV=production
      - PORT=3003
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - quantum-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: quantum-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - quantum-yield-empire
    restart: unless-stopped
    networks:
      - quantum-network

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: quantum-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - quantum-network

  grafana:
    image: grafana/grafana:latest
    container_name: quantum-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=quantum2024
    restart: unless-stopped
    networks:
      - quantum-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  quantum-network:
    driver: bridge 